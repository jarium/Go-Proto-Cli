// Code generated by protoc-gen-http. DO NOT EDIT.
// github.com/jarium/protoc-gen-http
// version:1.0

package example_pb

import (
	"context"
	"errors"
	"github.com/gin-gonic/gin"
	"net/http"
	"github.com/jarium/protoc-gen-http/pkg/apierror"
)

// ExampleHTTPServer is the HTTP server interface.
type ExampleHTTPServer interface {
	Example(context.Context, *ExampleRequest) (*ExampleReply, error)
}

func RegisterExampleHTTPServer(r *gin.Engine, srv ExampleHTTPServer) {
	r.GET("/example", _Example_Example_HTTP_Handler(srv))
}

func _Example_Example_HTTP_Handler(srv ExampleHTTPServer) func(c *gin.Context) {
	return func(c *gin.Context) {
		var in ExampleRequest
		if err := c.ShouldBind(&in); err != nil {
			c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
			return
		}
		out, err := srv.Example(c.Request.Context(), &in)
		if err != nil {
			var apiErr apierror.IError
			if errors.As(err, &apiErr) {
				c.Error(apiErr.Unwrap())
				c.JSON(apiErr.GetStatusCode(), gin.H{"error": apiErr.GetMessage()})
				return
			}
			c.Error(err)
			c.JSON(http.StatusInternalServerError, gin.H{"error": "internal server error"})
			return
		}
		c.JSON(http.StatusOK, out)
	}
}
